import socket
from cryptography.fernet import Fernet


def encryption(password_inp):
    key = "OZ3Mq9zCvgWq-Omzs5cDoJHqjOOblcpoxETPBPVaE7M="
    # Key generated by Fernet function
    message = password_inp.encode()
    function = Fernet(key)
    encrypt = function.encrypt(message)
    return encrypt
    # Returning the encrypted data


def decryption(password_inp):
    key = "OZ3Mq9zCvgWq-Omzs5cDoJHqjOOblcpoxETPBPVaE7M="
    # Same key should be used to decrypt the data otherwise it will through
    # error
    f = Fernet(key)
    decrypted = f.decrypt(password_inp)
    return decrypted.decode()


socket_object = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# Socket Object is created using AF_INET and TCP.
socket_object.bind(('localhost', 8000))
# Since the socket is server and client is on same machine
# we can use 'localhost'.
# 8000 is the port number used for binding.
socket_object.listen(3)
# This listens to only three clients.
credentials = dict()
while True:
    client_object, address_client = socket_object.accept()
    client_object.send(bytes("You are connected to Server....", 'utf-8'))
    # email, password = map(str, client_object.recv(1024).decode().split(" "))
    string = client_object.recv(1024).decode()
    # email, password = map(str, string.split(" "))
    # encrypted_pass = encryption(password)
    # credentials[email] = encrypted_pass
    client_object.send(bytes("Login Successful!", 'utf-8'))
    client_object.close()